{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Caesar",
	"patterns": [
		{ "include": "#keywords" },
		{ "include": "#strings" },
		{ "include": "#comments" },
		{ "include": "#attrs" },
		{ "include": "#constants" },
		{ "include": "#numbers" },
		{ "include": "#names" }
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.block.caesar",
					"begin": "#=",
					"end": "=#",
					"patterns": [
						{
							"include": "#comments"
						}
					]
				},
				{
					"name": "comment.line.caesar",
					"match": "#.*"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.caesar",
					"match": "\\b(if|else|and|or|while|for|return|break|continue|loop|match)\\b"
				},
				{
					"name": "keyword.other.caesar",
					"match": "\\b(type|let|mut|struct|tuple|union|as|is|fn|extern|const|static|mod|import|impl|trait|pub|enum|unsafe|sizeof|offsetof|owned|borrow)\\b"
				},
				{
					"name": "storage.type.built-in.primitive.caesar",
					"match": "\\b(void|bool|byte|int8|uint8|int16|uint16|int|uint|char|int64|uint64|isize|usize|float|float64)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.caesar",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.caesar",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.caesar",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.caesar",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"constants": {
			"name": "constant.language.caesar",
			"match": "\\b(true|false)\\b"
		},
		"numbers": {
			"name": "constant.numeric.caesar",
			"match": "\\b\\d+(\\.\\d+)?(((i|u)(8|16|32|64)|f(32|64)|u?sz))?"
		},
		"attrs": {
			"name": "variable.meta.attribute.caesar",
			"match": "@([a-zA-Z_][a-zA-Z0-9_]*)?"
		},
		"names": {
			"name": "variable.caesar",
			"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
		}
	},
	"scopeName": "source.csr"
}
